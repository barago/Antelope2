<Activity mc:Ignorable="sad" x:Class="TfsBuild.Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mt="clr-namespace:Microsoft.TeamFoundation;assembly=Microsoft.TeamFoundation.Common" xmlns:mtb="clr-namespace:Microsoft.TeamFoundation.Build.Common;assembly=Microsoft.TeamFoundation.Build.Common" xmlns:mtbc="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client" xmlns:mtbw="clr-namespace:Microsoft.TeamFoundation.Build.Workflow;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mtdwa="clr-namespace:Microsoft.TeamFoundation.Deployment.Workflow.Activities;assembly=Microsoft.TeamFoundation.Deployment.Workflow" xmlns:mtdw="clr-namespace:Microsoft.TeamFoundation.Deployment.Workflow;assembly=Microsoft.TeamFoundation.Deployment.Workflow" xmlns:mtbwa="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Activities;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mtbwt="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Tracking;assembly=Microsoft.TeamFoundation.Build.Workflow" xmlns:mttbb="clr-namespace:Microsoft.TeamFoundation.TestImpact.BuildIntegration.BuildActivities;assembly=Microsoft.TeamFoundation.TestImpact.BuildIntegration" xmlns:mtvc="clr-namespace:Microsoft.TeamFoundation.VersionControl.Client;assembly=Microsoft.TeamFoundation.VersionControl.Client" xmlns:mtvco="clr-namespace:Microsoft.TeamFoundation.VersionControl.Common;assembly=Microsoft.TeamFoundation.VersionControl.Common" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sad="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sad1="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core" xmlns:this="clr-namespace:TfsBuild;" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="SolutionToBuild" Type="InArgument(x:String)"/>
    <x:Property Name="ConfigurationsToBuild" Type="InArgument(mtbwa:PlatformConfigurationList)"/>
    <x:Property Name="TestSpecs" Type="InArgument(mtbwa:TestSpecList)"/>
    <x:Property Name="BuildNumberFormat" Type="InArgument(x:String)"/>
    <x:Property Name="CleanWorkspace" Type="InArgument(mtbwa:CleanWorkspaceOption)"/>
    <x:Property Name="RunCodeAnalysis" Type="InArgument(mtbwa:CodeAnalysisOption)"/>
    <x:Property Name="SourceAndSymbolServerSettings" Type="InArgument(mtbwa:SourceAndSymbolServerSettings)"/>
    <x:Property Name="AgentSettings" Type="InArgument(mtbwa:AgentSettings)"/>
    <x:Property Name="AssociateChangesetsAndWorkItems" Type="InArgument(x:Boolean)"/>
    <x:Property Name="CreateWorkItem" Type="InArgument(x:Boolean)"/>
    <x:Property Name="MSBuildArguments" Type="InArgument(x:String)"/>
    <x:Property Name="MSBuildPlatform" Type="InArgument(mtbwa:ToolPlatform)"/>
    <x:Property Name="MSBuildMultiProc" Type="InArgument(x:Boolean)"/>
    <x:Property Name="PerformTestImpactAnalysis" Type="InArgument(x:Boolean)"/>
    <x:Property Name="CreateLabel" Type="InArgument(x:Boolean)"/>
    <x:Property Name="DisableTests" Type="InArgument(x:Boolean)"/>
    <x:Property Name="GetVersion" Type="InArgument(x:String)"/>
    <x:Property Name="PrivateDropLocation" Type="InArgument(x:String)"/>
    <x:Property Name="Verbosity" Type="InArgument(mtbw:BuildVerbosity)"/>
    <x:Property Name="Metadata" Type="mtbw:ProcessParameterMetadataCollection"/>
    <x:Property Name="SupportedReasons" Type="mtbc:BuildReason"/>
    <x:Property Name="DeploymentEnvironmentName" Type="InArgument(x:String)"/>
    <x:Property Name="AllowUntrustedCertificates" Type="InArgument(x:Boolean)"/>
    <!-- Additional Cloud Service Overrides -->
    <x:Property Name="AlternatePublishProfile" Type="InArgument(x:String)"/>
    <x:Property Name="AlternateHostedServiceName" Type="InArgument(x:String)"/>
    <x:Property Name="AllowUpgrade" Type="InArgument(x:Boolean)"/>
    <!-- NOTE: this deliberately a String instead of Enum type so it can easily be set by server code. -->
    <x:Property Name="AlternateDeploymentSlot" Type="InArgument(x:String)"/>
    <x:Property Name="AlternateStorageAccountName" Type="InArgument(x:String)"/>
    <x:Property Name="AlternateDeploymentLabel" Type="InArgument(x:String)"/>
    <x:Property Name="AlternateServiceConfiguration" Type="InArgument(x:String)"/>
    <!-- Additional Web Deploy Overrides -->
    <x:Property Name="AlternateWebDeployPublishProfile" Type="InArgument(x:String)"/>
  </x:Members>
  <this:Process.SolutionToBuild>
    <InArgument x:TypeArguments="x:String"/>
  </this:Process.SolutionToBuild>
  <this:Process.ConfigurationsToBuild>[New Microsoft.TeamFoundation.Build.Workflow.Activities.PlatformConfigurationList()]</this:Process.ConfigurationsToBuild>
  <this:Process.DisableTests>[False]</this:Process.DisableTests>
  <this:Process.TestSpecs>[New Microsoft.TeamFoundation.Build.Workflow.Activities.TestSpecList(New Microsoft.TeamFoundation.Build.Workflow.Activities.AgileTestPlatformSpec("**\*test*.dll") With { .FailBuildOnFailure = True } )]</this:Process.TestSpecs>
  <this:Process.BuildNumberFormat>["$(BuildDefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)"]</this:Process.BuildNumberFormat>
  <this:Process.AssociateChangesetsAndWorkItems>[True]</this:Process.AssociateChangesetsAndWorkItems>
  <this:Process.CreateWorkItem>[True]</this:Process.CreateWorkItem>
  <this:Process.CleanWorkspace>[Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]</this:Process.CleanWorkspace>
  <this:Process.MSBuildArguments>
    <InArgument x:TypeArguments="x:String"/>
  </this:Process.MSBuildArguments>
  <this:Process.RunCodeAnalysis>[Microsoft.TeamFoundation.Build.Workflow.Activities.CodeAnalysisOption.AsConfigured]</this:Process.RunCodeAnalysis>
  <this:Process.MSBuildMultiProc>[True]</this:Process.MSBuildMultiProc>
  <this:Process.MSBuildPlatform>[Microsoft.TeamFoundation.Build.Workflow.Activities.ToolPlatform.Auto]</this:Process.MSBuildPlatform>
  <this:Process.PerformTestImpactAnalysis>[True]</this:Process.PerformTestImpactAnalysis>
  <this:Process.SourceAndSymbolServerSettings>[New Microsoft.TeamFoundation.Build.Workflow.Activities.SourceAndSymbolServerSettings(True, Nothing)]</this:Process.SourceAndSymbolServerSettings>
  <this:Process.CreateLabel>[True]</this:Process.CreateLabel>
  <this:Process.GetVersion>
    <InArgument x:TypeArguments="x:String"/>
  </this:Process.GetVersion>
  <this:Process.AgentSettings>[New Microsoft.TeamFoundation.Build.Workflow.Activities.AgentSettings() With {.MaxWaitTime = New System.TimeSpan(4, 0, 0), .MaxExecutionTime = New System.TimeSpan(0, 0, 0), .TagComparison = Microsoft.TeamFoundation.Build.Workflow.Activities.TagComparison.MatchExactly }]</this:Process.AgentSettings>
  <this:Process.Verbosity>[Microsoft.TeamFoundation.Build.Workflow.BuildVerbosity.Normal]</this:Process.Verbosity>
  <this:Process.AllowUntrustedCertificates>[True]</this:Process.AllowUntrustedCertificates>
  <this:Process.AllowUpgrade>[True]</this:Process.AllowUpgrade>
  <this:Process.Metadata>
    <mtbw:ProcessParameterMetadataCollection>
      <mtbw:ProcessParameterMetadata BrowsableWhen="EditingDefinition" Category="#100 requis" Required="True" DisplayName="Solution à générer" Description="Solution à générer, empaqueter et déployer." ParameterName="SolutionToBuild" Editor="Microsoft.TeamFoundation.Build.Controls.ServerFileBrowserEditor, Microsoft.TeamFoundation.Build.Controls"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="EditingDefinition" Category="#200 De base" DisplayName="Configuration à générer" Description="Configuration à générer." ParameterName="ConfigurationsToBuild"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="EditingDefinition" Category="#300 Avancé" DisplayName="MSBuild multiprocesseur" Description="Activez MSBuild multiprocesseur pour générer les projets de vos solutions en parallèle, lorsque cela est possible, à l'aide de tous les processeurs disponibles sur le serveur de builds." ParameterName="MSBuildMultiProc"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="EditingDefinition" Category="#300 Avancé" DisplayName="Sorties de génération spécifiques à la solution" Description="La valeur True place les sorties de génération dans des dossiers portant le nom de la solution. La valeur False place les sorties de génération dans le même dossier." ParameterName="SolutionSpecificBuildOutputs"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#400 Publication -- Général" Description="Ensemble nommé des paramètres de déploiement à utiliser dans le cadre du déploiement de l'application." DisplayName="Nom des paramètres de déploiement" ParameterName="DeploymentEnvironmentName"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#400 Publication -- Général" Description="La valeur True autorisera les certificats non associés à une racine durant le déploiement." DisplayName="Autoriser les certificats non approuvés" ParameterName="AllowUntrustedCertificates"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#500 Publication -- Service cloud Azure" Description="Spécifiez le chemin d'accès au contrôle de code source d'un profil de publication de substitution." DisplayName="Profil de publication de substitution" ParameterName="AlternatePublishProfile" Editor="Microsoft.TeamFoundation.Build.Controls.ServerFileBrowserEditor, Microsoft.TeamFoundation.Build.Controls"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#500 Publication -- Service cloud Azure" Description="Spécifiez le nom d'un compte de stockage de substitution." DisplayName="Nom du compte de stockage de substitution" ParameterName="AlternateStorageAccountName"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#500 Publication -- Service cloud Azure" Description="Spécifiez l'environnement du service cloud : Production ou Intermédiaire." DisplayName="Environnement du service cloud de substitution" ParameterName="AlternateDeploymentSlot"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#500 Publication -- Service cloud Azure" Description="Spécifiez une étiquette de déploiement de substitution." DisplayName="Étiquette de déploiement de substitution" ParameterName="AlternateDeploymentLabel"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#500 Publication -- Service cloud Azure" Description="Spécifiez un nom de service cloud de substitution." DisplayName="Nom du service cloud de substitution" ParameterName="AlternateHostedServiceName"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#500 Publication -- Service cloud Azure" Description="Spécifiez la configuration du service de substitution." DisplayName="Configuration du service de substitution" ParameterName="AlternateServiceConfiguration"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#500 Publication -- Service cloud Azure" Description="Spécifiez si la mise à niveau est autorisée lors du déploiement." DisplayName="Autoriser la mise à niveau" ParameterName="AllowUpgrade"/>
      <mtbw:ProcessParameterMetadata BrowsableWhen="Always" Category="#600 Publication -- Site Web Azure" Description="Spécifiez le chemin d'accès au contrôle de code source d'un profil de publication Web Deploy." DisplayName="Profil de publication Web Deploy" ParameterName="AlternateWebDeployPublishProfile" Editor="Microsoft.TeamFoundation.Build.Controls.ServerFileBrowserEditor, Microsoft.TeamFoundation.Build.Controls"/>
    </mtbw:ProcessParameterMetadataCollection>
  </this:Process.Metadata>
  <this:Process.SupportedReasons>All</this:Process.SupportedReasons>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces serialized as XML namespaces</mva:VisualBasic.Settings>
  <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
    <Sequence.Variables>
      <Variable x:TypeArguments="mtbc:IBuildDetail" Name="BuildDetail"/>
      <Variable x:TypeArguments="x:String" Name="DropLocation"/>
      <Variable x:TypeArguments="mtbwa:PlatformConfiguration" Name="ConfigurationToBuild"/>
    </Sequence.Variables>
    <mtbwa:GetBuildDetail DisplayName="Obtenir la build" Result="[BuildDetail]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
    <Sequence DisplayName="Mettre à jour l'emplacement cible" mtbwt:BuildTrackingParticipant.Importance="Low">
      <mtbwa:InvokeForReason DisplayName="Mettre à jour le numéro de build pour les builds déclenchées" Reason="Triggered">
        <mtbwa:UpdateBuildNumber BuildNumberFormat="[BuildNumberFormat]" DisplayName="Mettre à jour le numéro de build"/>
      </mtbwa:InvokeForReason>
      <If Condition="[(Not String.IsNullOrEmpty(BuildDetail.DropLocationRoot)) AndAlso (BuildDetail.Reason And Microsoft.TeamFoundation.Build.Client.BuildReason.Triggered) = BuildDetail.Reason]" DisplayName="Si le motif de build a la valeur Triggered" mtbwt:BuildTrackingParticipant.Importance="Low">
        <If.Then>
          <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
            <Assign x:TypeArguments="x:String" mtbwt:BuildTrackingParticipant.Importance="None" Value="[BuildDropProvider.CombinePaths(BuildDetail.DropLocationRoot, BuildDetail.BuildDefinition.Name, BuildDetail.BuildNumber)]" To="[DropLocation]"/>
            <mtbwa:SetBuildProperties DisplayName="Définir l'emplacement cible" DropLocation="[DropLocation]" PropertiesToSet="DropLocation" mtbwt:BuildTrackingParticipant.Importance="Low"/>
          </Sequence>
        </If.Then>
      </If>
      <If Condition="[(Not String.IsNullOrEmpty(PrivateDropLocation)) AndAlso BuildDetail.Reason = Microsoft.TeamFoundation.Build.Client.BuildReason.ValidateShelveset]" DisplayName="Si le motif de build a la valeur ValidateShelveset" mtbwt:BuildTrackingParticipant.Importance="Low">
        <If.Then>
          <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
            <Assign x:TypeArguments="x:String" Value="[BuildDropProvider.CombinePaths(PrivateDropLocation, BuildDetail.BuildDefinition.Name, BuildDetail.BuildNumber)]" To="[DropLocation]" mtbwt:BuildTrackingParticipant.Importance="None"/>
            <mtbwa:SetBuildProperties DisplayName="Définir l'emplacement cible de la build privée" DropLocation="[DropLocation]" PropertiesToSet="DropLocation" mtbwt:BuildTrackingParticipant.Importance="Low"/>
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <mtbwa:AgentScope DisplayName="Exécuter sur l'agent" MaxExecutionTime="[AgentSettings.MaxExecutionTime]" MaxWaitTime="[AgentSettings.MaxWaitTime]" ReservationSpec="[AgentSettings.GetAgentReservationSpec()]">
      <mtbwa:AgentScope.Variables>
        <Variable x:TypeArguments="mtbc:IBuildAgent" Name="BuildAgent"/>
        <Variable x:TypeArguments="mtvc:Workspace" Name="Workspace"/>
        <Variable x:TypeArguments="x:String" Name="BuildDirectory"/>
        <Variable x:TypeArguments="x:String" Default="[BuildDetail.BuildNumber]" Name="LabelName"/>
        <Variable x:TypeArguments="x:String" Name="WorkspaceName"/>
        <Variable x:TypeArguments="x:String" Name="SourcesDirectory"/>
        <Variable x:TypeArguments="x:String" Name="BinariesDirectory"/>
        <Variable x:TypeArguments="x:String" Name="TestResultsDirectory"/>
      </mtbwa:AgentScope.Variables>
      <Sequence DisplayName="Initialiser les variables" mtbwt:BuildTrackingParticipant.Importance="Low">
        <mtbwa:GetBuildAgent DisplayName="Obtenir l'agent" Result="[BuildAgent]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
        <mtbwa:GetBuildDirectory DisplayName="Obtenir le répertoire de build" Result="[BuildDirectory]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
        <Assign x:TypeArguments="x:String" DisplayName="Initialiser le nom de l'espace de travail" To="[WorkspaceName]" Value="[String.Format(&quot;{0}_{1}_{2}&quot;, BuildDetail.BuildDefinition.Id, Microsoft.TeamFoundation.LinkingUtilities.DecodeUri(BuildAgent.Uri.AbsoluteUri).ToolSpecificId, BuildAgent.ServiceHost.Name)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
        <Assign x:TypeArguments="x:String" DisplayName="Initialiser le répertoire Sources" To="[SourcesDirectory]" Value="[String.Format(&quot;{0}\src&quot;, BuildDirectory)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
        <Assign x:TypeArguments="x:String" DisplayName="Initialiser le répertoire Binaires" To="[BinariesDirectory]" Value="[String.Format(&quot;{0}\bin&quot;, BuildDirectory)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
        <Assign x:TypeArguments="x:String" DisplayName="Initialiser le répertoire TestResults" To="[TestResultsDirectory]" Value="[String.Format(&quot;{0}\tst&quot;, BuildDirectory)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
        <If Condition="[ConfigurationsToBuild.Count = 0]" DisplayName="Si ConfigurationsToBuild a la valeur Empty" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Assign x:TypeArguments="mtbwa:PlatformConfiguration" DisplayName="Utiliser la configuration de plateforme par défaut" To="[ConfigurationToBuild]" Value="[Microsoft.TeamFoundation.Build.Workflow.Activities.PlatformConfiguration.Default]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
          </If.Then>
          <If.Else>
            <Assign x:TypeArguments="mtbwa:PlatformConfiguration" DisplayName="Utiliser la configuration de plateforme de l'utilisateur" To="[ConfigurationToBuild]" Value="[ConfigurationsToBuild(0)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
          </If.Else>
        </If>
        <If Condition="[WorkspaceName.Length &gt; Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize]" DisplayName="Si WorkspaceName &gt; MaxSize" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
              <mtbwa:WriteBuildWarning DisplayName="Écrire un avertissement de taille d'espace de travail" Message="[String.Format(&quot;Le nombre de caractères du nom de l’espace de travail '{0}' dépasse la limite autorisée de '{1}'. Il est tronqué pour correspondre à la limite maximale.&quot;, WorkspaceName, Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize)]"/>
              <Assign x:TypeArguments="x:String" DisplayName="Tronquer WorkspaceName à MaxSize" To="[WorkspaceName]" Value="[WorkspaceName.Substring(0, Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize).TrimEnd()]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
            </Sequence>
          </If.Then>
        </If>
      </Sequence>
      <Sequence DisplayName="Initialiser l'espace de travail" mtbwt:BuildTrackingParticipant.Importance="Low">
        <mtbwa:DeleteDirectory Directory="[TestResultsDirectory]" DisplayName="Supprimer le répertoire Test Results" Recursive="[True]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
        <If Condition="[Not CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.None]" DisplayName="Si Not CleanWorkspace = CleanWorkspaceOption.None" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <mtbwa:DeleteDirectory Directory="[BinariesDirectory]" DisplayName="Supprimer le répertoire Binaires" mtbwt:BuildTrackingParticipant.Importance="Low"/>
          </If.Then>
        </If>
        <If Condition="[CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" DisplayName="Si CleanWorkspace = CleanWorkspaceOption.All" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Sequence DisplayName="Supprimer l'espace de travail et le répertoire Sources" mtbwt:BuildTrackingParticipant.Importance="Low">
              <mtbwa:DeleteWorkspace DeleteLocalItems="[True]" DisplayName="Supprimer l'espace de travail" Name="[WorkspaceName]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
              <mtbwa:DeleteDirectory Directory="[SourcesDirectory]" DisplayName="Supprimer le répertoire Sources" mtbwt:BuildTrackingParticipant.Importance="Low"/>
            </Sequence>
          </If.Then>
        </If>
        <mtbwa:CreateWorkspace BuildDirectory="[BuildDirectory]" Comment="[&quot;Workspace Created by Team Build&quot;]" DisplayName="Créer l'espace de travail" Name="[WorkspaceName]" Result="[Workspace]" SourcesDirectory="[SourcesDirectory]"/>
        <If Condition="[CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.Outputs]" DisplayName="Si CleanWorkspace = CleanWorkspaceOption.Outputs" mtbwt:BuildTrackingParticipant.Importance="Low">
          <If.Then>
            <Sequence DisplayName="Nettoyer la configuration">
              <If Condition="[Not String.IsNullOrEmpty(SolutionToBuild)]" DisplayName="Si SolutionToBuild a la valeur Not Nothing" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <Sequence DisplayName="Nettoyer le projet" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="localBuildProjectItem"/>
                    </Sequence.Variables>
                    <mtbwa:ConvertWorkspaceItem DisplayName="Convertir les chemins d'accès au serveur en chemins d'accès locaux" Input="[SolutionToBuild]" Result="[localBuildProjectItem]" Workspace="[Workspace]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                    <If Condition="[System.IO.File.Exists(localBuildProjectItem)]" DisplayName="Si File.Exists(Project)" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <mtbwa:MSBuild CommandLineArguments="[String.Format(&quot;/p:SkipInvalidConfigurations=true {0}&quot;, MSBuildArguments)]" Configuration="[ConfigurationToBuild.Configuration]" DisplayName="Exécuter MSBuild pour le projet" GenerateVSPropsFile="[True]" MaxProcesses="[If (MSBuildMultiProc, 0, 1)]" OutDir="[BinariesDirectory]" Platform="[ConfigurationToBuild.Platform]" Project="[localBuildProjectItem]" Targets="[New String() { &quot;Clean&quot; }]" TargetsNotLogged="[New String() {&quot;GetNativeManifest&quot;, &quot;GetCopyToOutputDirectoryItems&quot;, &quot;GetTargetPath&quot;}]" ToolPlatform="[MSBuildPlatform]" Verbosity="[Verbosity]"/>
                      </If.Then>
                    </If>
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
          </If.Then>
        </If>
        <mtbwa:SyncWorkspace DisplayName="Obtenir l'espace de travail" VersionOverride="[GetVersion]" Workspace="[Workspace]">
          <mtbwa:SyncWorkspace.RequestsFailed>
            <ActivityAction x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests"/>
              </ActivityAction.Argument>
              <mtbwa:RetryRequests Behavior="[Microsoft.TeamFoundation.Build.Workflow.Activities.RetryBehavior.DoNotBatch]" DisplayName="Marquer les demandes pour une nouvelle tentative" Requests="[failedRequests]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
            </ActivityAction>
          </mtbwa:SyncWorkspace.RequestsFailed>
        </mtbwa:SyncWorkspace>
      </Sequence>
      <If Condition="[CreateLabel]" DisplayName="Si CreateLabel" mtbwt:BuildTrackingParticipant.Importance="Low">
        <If.Then>
          <mtbwa:InvokeForReason DisplayName="Créer et définir l'étiquette pour les builds non-Shelveset" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
            <mtbwa:LabelWorkspace Comment="[&quot;Label Created by Team Build&quot;]" DisplayName="Créer l'étiquette" Name="[LabelName]" Scope="[String.Format(&quot;$/{0}&quot;, BuildDetail.BuildDefinition.TeamProject)]" Workspace="[Workspace]"/>
            <mtbwa:SetBuildProperties DisplayName="Affecter la valeur BuildDetail à l'étiquette" LabelName="[String.Format(&quot;{0}@$/{1}&quot;, LabelName, BuildDetail.BuildDefinition.TeamProject)]" PropertiesToSet="LabelName" mtbwt:BuildTrackingParticipant.Importance="Low"/>
          </mtbwa:InvokeForReason>
        </If.Then>
        <If.Else>
          <mtbwa:WriteBuildMessage DisplayName="Écrire un message" Message="Pas d'étiquetage de sources" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]"/>
        </If.Else>
      </If>
      <TryCatch DisplayName="Essayer de compiler, tester et associer des ensembles de modifications et des éléments de travail" mtbwt:BuildTrackingParticipant.Importance="Low">
        <TryCatch.Finally>
          <Sequence DisplayName="Rétablir l'espace de travail et copier les fichiers vers l'emplacement cible" mtbwt:BuildTrackingParticipant.Importance="Low">
            <mtbwa:InvokeForReason DisplayName="Rétablir l'espace de travail pour les builds Shelveset" Reason="CheckInShelveset, ValidateShelveset">
              <mtbwa:RevertWorkspace DisplayName="Rétablir l'espace de travail" Workspace="[Workspace]"/>
            </mtbwa:InvokeForReason>
            <If Condition="[Not String.IsNullOrEmpty(DropLocation)]" DisplayName="Si DropLocation a la valeur Set" mtbwt:BuildTrackingParticipant.Importance="Low">
              <If.Then>
                <mtbwa:CopyDirectory DisplayName="Déposer les fichiers dans l'emplacement cible" Source="[BinariesDirectory]" Destination="[DropLocation]"/>
              </If.Then>
            </If>
          </Sequence>
        </TryCatch.Finally>
        <TryCatch.Try>
          <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:Exception" Name="compilationException"/>
              <Variable x:TypeArguments="scg:IList(mtvc:Changeset)" Name="associatedChangesets"/>
              <Variable x:TypeArguments="s:Boolean" Name="treatTestFailureAsBuildFailure"/>
            </Sequence.Variables>
            <Parallel DisplayName="Compiler, tester et associer des ensembles de modifications et des éléments de travail">
              <TryCatch DisplayName="Essayer de compiler et tester" mtbwt:BuildTrackingParticipant.Importance="Low">
                <TryCatch.Try>
                  <Sequence DisplayName="Compiler et tester">
                    <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="outputDirectory"/>
                        <Variable x:TypeArguments="x:String" Name="logFileDropLocation"/>
                        <Variable x:TypeArguments="mtbc:DeploymentEnvironment" Name="deploymentEnvironment"/>
                        <Variable x:TypeArguments="mtdw:MSDeployProfile" Name="azureWebSiteProfile"/>
                        <Variable x:TypeArguments="mtb:AzureCloudAppProfile" Name="azureCloudAppProfile"/>
                        <Variable x:TypeArguments="x:Boolean" Name="deployOutput" Default="False"/>
                        <Variable x:TypeArguments="x:String" Name="targetSite"/>
                        <Variable x:TypeArguments="x:String" Name="AlternateWebDeployPublishProfileName"/>
                        <Variable x:TypeArguments="x:Boolean" Name="CreateWebDeployPackage" Default="False"/>
                      </Sequence.Variables>
                      <Sequence DisplayName="Initialiser les variables" mtbwt:BuildTrackingParticipant.Importance="Low">
                        <Assign x:TypeArguments="x:String" DisplayName="Créer OutputDirectory" To="[outputDirectory]" Value="[BinariesDirectory]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                        <If Condition="[Not String.IsNullOrEmpty(DropLocation)]" DisplayName="Si DropLocation a la valeur Set" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <If.Then>
                            <Assign x:TypeArguments="x:String" DisplayName="Initialiser l'emplacement cible de LogFile" To="[logFileDropLocation]" Value="[BuildDropProvider.CombinePaths(DropLocation, &quot;logs&quot;)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                          </If.Then>
                        </If>
                        <If Condition="[Not String.IsNullOrEmpty(DeploymentEnvironmentName)]" DisplayName="Si DeploymentEnvironmentName a la valeur Set" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <If.Then>
                            <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                              <mtdwa:GetDeploymentEnvironment DisplayName="Obtenir l'environnement de déploiement" DeploymentEnvironmentName="[DeploymentEnvironmentName]" Result="[deploymentEnvironment]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                              <Assign x:TypeArguments="x:Boolean" DisplayName="Attribuer la valeur True à la sortie de déploiement" mtbwt:BuildTrackingParticipant.Importance="Low" Value="True" To="[deployOutput]"/>
                              <If Condition="[deploymentEnvironment.EnvironmentMetadata.Kind = Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.AzureWebSite]" DisplayName="Si l'environnement de déploiement est un site Web Azure" mtbwt:BuildTrackingParticipant.Importance="Low">
                                <If.Then>
                                  <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                    <mtdwa:GetAzureWebsitePublishProfile DisplayName="Récupérer le profil de publication du site Web Azure" ConnectedService="[deploymentEnvironment.ConnectedService]" WebsiteEnvironment="[deploymentEnvironment]" AllowUntrustedCertificates="[AllowUntrustedCertificates]" Result="[azureWebSiteProfile]"/>
                                    <Assign x:TypeArguments="x:Boolean" DisplayName="Attribuer la valeur True à Créer un package Web Deploy" mtbwt:BuildTrackingParticipant.Importance="Low" Value="True" To="[CreateWebDeployPackage]"/>
                                    <!-- The following value is passed to MSBuild for packaging -->
                                    <Assign x:TypeArguments="x:String" DisplayName="Définir la variable du site cible" mtbwt:BuildTrackingParticipant.Importance="Low" Value="[azureWebSiteProfile.MSDeploySite]" To="[targetSite]"/>
                                    <If Condition="[Not String.IsNullOrEmpty(AlternateWebDeployPublishProfile)]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Si utiliser le profil de publication de substitution Web Deploy">
                                      <If.Then>
                                        <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="localProfile"/>
                                          </Sequence.Variables>
                                          <mtbwa:ConvertWorkspaceItem DisplayName="Convertir le chemin d'accès au serveur en chemin d'accès local" Input="[AlternateWebDeployPublishProfile]" Result="[localProfile]" Workspace="[Workspace]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                          <Assign x:TypeArguments="x:String" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Enregistrer le nom du profil de publication Web Deploy de substitution" To="[AlternateWebDeployPublishProfileName]" Value="[System.IO.Path.GetFileNameWithoutExtension(localProfile)]"/>
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </If.Then>
                              </If>
                              <If Condition="[deploymentEnvironment.EnvironmentMetadata.Kind = Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.AzureCloudApp]" DisplayName="Si l'environnement de déploiement est un service cloud Azure" mtbwt:BuildTrackingParticipant.Importance="Low">
                                <If.Then>
                                  <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                    <If Condition="[String.IsNullOrEmpty(AlternatePublishProfile)]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Si Utiliser le profil de publication par défaut">
                                      <If.Then>
                                        <mtdwa:GetAzureCloudAppPublishProfile DisplayName="Obtenir le profil de publication du service cloud Azure" CloudAppEnvironment="[deploymentEnvironment]" Result="[azureCloudAppProfile]"/>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="localProfile"/>
                                          </Sequence.Variables>
                                          <mtbwa:ConvertWorkspaceItem DisplayName="Convertir le chemin d'accès au serveur en chemin d'accès local" Input="[AlternatePublishProfile]" Result="[localProfile]" Workspace="[Workspace]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                          <Assign x:TypeArguments="mtb:AzureCloudAppProfile" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Charger le profil de publication de substitution" To="[azureCloudAppProfile]" Value="[AzureCloudAppProfile.Parse(System.IO.File.ReadAllText(localProfile))]"/>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <If Condition="[Not String.IsNullOrEmpty(AlternateHostedServiceName)]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Si le nom du service cloud de substitution est défini.">
                                      <If.Then>
                                        <Assign x:TypeArguments="x:String" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Définissez le nom du service cloud de substitution dans le profil." To="[azureCloudAppProfile.AzureHostedServiceName]" Value="[AlternateHostedServiceName]"/>
                                      </If.Then>
                                    </If>
                                    <If Condition="[Not String.IsNullOrEmpty(AlternateDeploymentSlot)]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Si l'emplacement de déploiement de substitution est défini.">
                                      <If.Then>
                                        <Assign x:TypeArguments="mtb:AzureDeploymentSlot" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Définissez l'emplacement du déploiement de substitution dans le profil." To="[azureCloudAppProfile.AzureSlot]" Value="[CType([Enum].Parse(GetType(AzureDeploymentSlot), AlternateDeploymentSlot, True), AzureDeploymentSlot)]"/>
                                      </If.Then>
                                    </If>
                                    <If Condition="[Not String.IsNullOrEmpty(AlternateStorageAccountName)]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Si le nom du compte de stockage de substitution est défini.">
                                      <If.Then>
                                        <Assign x:TypeArguments="x:String" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Définissez le nom du compte de stockage de substitution dans le profil." To="[azureCloudAppProfile.AzureStorageAccountName]" Value="[AlternateStorageAccountName]"/>
                                      </If.Then>
                                    </If>
                                    <If Condition="[Not String.IsNullOrEmpty(AlternateServiceConfiguration)]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Si la configuration du service de substitution est définie.">
                                      <If.Then>
                                        <Assign x:TypeArguments="x:String" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Définissez la configuration du service de substitution dans le profil." To="[azureCloudAppProfile.AzureServiceConfiguration]" Value="[AlternateServiceConfiguration]"/>
                                      </If.Then>
                                    </If>
                                    <If Condition="[Not String.IsNullOrEmpty(AlternateDeploymentLabel)]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Si l'étiquette du déploiement de substitution est définie.">
                                      <If.Then>
                                        <Assign x:TypeArguments="x:String" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Définissez l'étiquette du déploiement de substitution dans le profil." To="[azureCloudAppProfile.AzureDeploymentLabel]" Value="[AlternateDeploymentLabel]"/>
                                      </If.Then>
                                    </If>
                                    <If Condition="[Not AllowUpgrade = azureCloudAppProfile.AzureAllowUpgrade]" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Si Autoriser la mise à niveau est remplacé">
                                      <If.Then>
                                        <Assign x:TypeArguments="x:Boolean" mtbwt:BuildTrackingParticipant.Importance="Low" DisplayName="Définissez Autoriser la mise à niveau dans le profil." To="[azureCloudAppProfile.AzureAllowUpgrade]" Value="[AllowUpgrade]"/>
                                      </If.Then>
                                    </If>
                                    <If Condition="[(Not ConfigurationToBuild.IsConfigurationEmpty) AndAlso (Not String.IsNullOrEmpty(azureCloudAppProfile.AzureSolutionConfiguration))]" DisplayName="Si la configuration de build et la configuration de solution de profil Azure sont définies." mtbwt:BuildTrackingParticipant.Importance="Low">
                                      <If.Then>
                                        <If Condition="[Not (String.Compare(ConfigurationToBuild.Configuration, azureCloudAppProfile.AzureSolutionConfiguration, System.Globalization.CultureInfo.InvariantCulture, System.Globalization.CompareOptions.OrdinalIgnoreCase) = 0)]" DisplayName="Si la configuration de build et la configuration de solution de profil Azure ne sont pas équivalentes." mtbwt:BuildTrackingParticipant.Importance="Low">
                                          <If.Then>
                                            <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                              <Assign x:TypeArguments="x:Boolean" DisplayName="Attribuer la valeur False à la sortie de déploiement" mtbwt:BuildTrackingParticipant.Importance="Low" Value="False" To="[deployOutput]"/>
                                              <mtbwa:WriteBuildMessage DisplayName="Écrire un message" Message="[String.Format(« Cette build ne sera pas déployée, car la configuration de build -- {0} -- et la configuration de solution de profil Azure -- {1} -- ne correspondent pas. », ConfigurationToBuild.Configuration, azureCloudAppProfile.AzureSolutionConfiguration)]" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]"/>
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </If.Then>
                              </If>
                              <If Condition="[deployOutput]" DisplayName="Sortie de déploiement" mtbwt:BuildTrackingParticipant.Importance="Low">                                
                                <If.Then>
                                  <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                    <mtdwa:UpdateDeployment BuildDetail="[BuildDetail]" Stage="[Microsoft.TeamFoundation.Deployment.Workflow.Activities.DeploymentStage.Start]" DeploymentEnvironmentName="[deploymentEnvironment.EnvironmentMetadata.Name]" DisplayName="Marquer cette build comme incluant le déploiement" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                    <If Condition="[deploymentEnvironment.EnvironmentMetadata.Kind = Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.AzureCloudApp]" DisplayName="Si l'environnement de déploiement est un service cloud Azure" mtbwt:BuildTrackingParticipant.Importance="Low">
                                      <If.Then>
                                        <mtdwa:UpdateDeployment BuildDetail="[BuildDetail]" Stage="[Microsoft.TeamFoundation.Deployment.Workflow.Activities.DeploymentStage.AddProperty]" PropertyKey="AzureSlot" PropertyValue="[azureCloudAppProfile.AzureSlot.ToString()]" DisplayName="Ajouter la propriété AzureSlot au déploiement" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                      <If Condition="[Not String.IsNullOrEmpty(SolutionToBuild)]" DisplayName="Si SolutionToBuild a la valeur Not Nothing" mtbwt:BuildTrackingParticipant.Importance="Low">
                        <If.Then>
                          <TryCatch DisplayName="Essayer de compiler le projet" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <TryCatch.Try>
                              <Sequence DisplayName="Compiler le projet" mtbwt:BuildTrackingParticipant.Importance="Low">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="localProject"/>
                                </Sequence.Variables>
                                <mtbwa:ConvertWorkspaceItem DisplayName="Convertir le chemin d'accès au serveur en chemin d'accès local" Input="[SolutionToBuild]" Result="[localProject]" Workspace="[Workspace]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                <If Condition="[(deploymentEnvironment IsNot Nothing) AndAlso (deploymentEnvironment.EnvironmentMetadata.Kind = Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.AzureCloudApp)]" DisplayName="Si l'environnement de déploiement est un service cloud Azure" mtbwt:BuildTrackingParticipant.Importance="Low">
                                  <If.Then>
                                    <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="ccprojName"/>
                                      </Sequence.Variables>
                                      <mtdwa:FindCCProjInSln DisplayName="Rechercher le projet Azure dans la solution" mtbwt:BuildTrackingParticipant.Importance="Low" SolutionPath="[localProject]" Result="[ccprojName]"/>
                                      <Assign x:TypeArguments="x:String" DisplayName="Configurer le projet pour la génération de CSPack" To="[MSBuildArguments]" Value="[String.Format(&quot;/t:{0}:Publish /p:PublishDir={1}/app.publish/ {2}&quot;, ccprojName, outputDirectory, MSBuildArguments)]"/>
                                      <If Condition="[Not String.IsNullOrEmpty(azureCloudAppProfile.AzureServiceConfiguration)]" DisplayName="Si la configuration du service est spécifiée" mtbwt:BuildTrackingParticipant.Importance="Low">
                                        <If.Then>
                                          <Assign x:TypeArguments="x:String" DisplayName="Définir la configuration du service Azure" To="[MSBuildArguments]" Value="[String.Format(&quot;/p:TargetProfile={0} {1}&quot;, azureCloudAppProfile.AzureServiceConfiguration, MSBuildArguments)]"/>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </If.Then>
                                </If>
                                <If Condition="[Not String.IsNullOrEmpty(AlternateWebDeployPublishProfileName) AndAlso (deploymentEnvironment.EnvironmentMetadata.Kind = Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.AzureWebSite)]" DisplayName="Si l'environnement de déploiement est un site Web Azure" mtbwt:BuildTrackingParticipant.Importance="Low">
                                  <If.Then>
                                    <Assign x:TypeArguments="x:String" DisplayName="Définir le profil de publication Web Deploy" To="[MSBuildArguments]" Value="[String.Format(&quot;/p:WebPublishMethod=Package;PublishProfile=&quot;&quot;{0}&quot;&quot; {1}&quot;, AlternateWebDeployPublishProfileName, MSBuildArguments)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                  </If.Then>
                                </If>
                                <mtbwa:MSBuild CommandLineArguments="[String.Format(&quot;/p:SkipInvalidConfigurations=true {0}&quot;, MSBuildArguments)]" Configuration="[ConfigurationToBuild.Configuration]" DisplayName="Exécuter MSBuild pour le projet" GenerateVSPropsFile="[True]" LogFileDropLocation="[logFileDropLocation]" MaxProcesses="[If (MSBuildMultiProc, 0, 1)]" OutDir="[outputDirectory]" Platform="[ConfigurationToBuild.Platform]" Project="[localProject]" RunCodeAnalysis="[RunCodeAnalysis]" TargetsNotLogged="[New String() {&quot;GetNativeManifest&quot;, &quot;GetCopyToOutputDirectoryItems&quot;, &quot;GetTargetPath&quot;}]" ToolPlatform="[MSBuildPlatform]" Verbosity="[Verbosity]" DeployOnBuild="[CreateWebDeployPackage]" DeployIisAppPath="[targetSite]"/>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="ex"/>
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Gérer l'exception">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests"/>
                                    </Sequence.Variables>
                                    <mtbwa:SetBuildProperties CompilationStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" DisplayName="Affecter la valeur Échec à CompilationStatus" PropertiesToSet="CompilationStatus" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                    <If Condition="[CreateWorkItem]" DisplayName="Si CreateWorkItem" mtbwt:BuildTrackingParticipant.Importance="Low">
                                      <If.Then>
                                        <mtbwa:InvokeForReason DisplayName="Créer l'élément de travail pour les builds non-Shelveset" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                                          <mtbwa:OpenWorkItem AssignedTo="[BuildDetail.RequestedFor]" Comment="[&quot;Cet élément de travail a été créé par TFS Build suite à un échec de génération.&quot;]" CustomFields="[New Dictionary(Of String, String) From { {&quot;System.Reason&quot;, &quot;Échec de la génération&quot;}, {&quot;Microsoft.VSTS.TCM.ReproSteps&quot;, &quot;Démarrer la build à l'aide de TFS Build&quot;}, {&quot;Priorité&quot;, &quot;1&quot;}, {&quot;Gravité&quot;, &quot;1 - Critique&quot;} }]" DisplayName="Créer un élément de travail" Title="[String.Format(&quot;Échec de la génération dans la build : {0}&quot;, BuildDetail.BuildNumber)]" Type="[&quot;Bogue&quot;]"/>
                                        </mtbwa:InvokeForReason>
                                      </If.Then>
                                    </If>
                                    <mtbwa:GetApprovedRequests DisplayName="Faire approuver les demandes pour l'archivage" Result="[failedRequests]" mtbwt:BuildTrackingParticipant.Importance="None"/>
                                    <mtbwa:RetryRequests Behavior="[Microsoft.TeamFoundation.Build.Workflow.Activities.RetryBehavior.DoNotBatch]" DisplayName="Marquer les demandes pour une nouvelle tentative" Requests="[failedRequests]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                    <Rethrow DisplayName="Lever à nouveau l'exception pour arrêter la build" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </If.Then>
                      </If>
                      <If Condition="[Not DisableTests]" DisplayName="Si Not DisableTests" mtbwt:BuildTrackingParticipant.Importance="Low">
                        <If.Then>
                          <Sequence DisplayName="Exécuter les tests" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <If Condition="[Not TestSpecs Is Nothing]" DisplayName="Si Not TestSpecs Is Nothing" mtbwt:BuildTrackingParticipant.Importance="Low">
                              <If.Then>
                                <ForEach x:TypeArguments="mtbwa:TestSpec" DisplayName="Pour chaque TestSpec dans TestSpecs" Values="[TestSpecs]" mtbwt:BuildTrackingParticipant.Importance="Low">
                                  <ActivityAction x:TypeArguments="mtbwa:TestSpec">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="mtbwa:TestSpec" Name="spec"/>
                                    </ActivityAction.Argument>
                                    <TryCatch DisplayName="Essayer d'exécuter les tests" mtbwt:BuildTrackingParticipant.Importance="Low">
                                      <TryCatch.Try>
                                        <If Condition="[TypeOf spec Is Microsoft.TeamFoundation.Build.Workflow.Activities.AgileTestPlatformSpec]" DisplayName="Si spec Is AgileTestPlatformSpec" mtbwt:BuildTrackingParticipant.Importance="None">
                                          <If.Then>
                                            <Sequence DisplayName="Exécuter Visual Studio Test Runner pour les sources de test" mtbwt:BuildTrackingParticipant.Importance="Low">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="mtbwa:AgileTestPlatformSpec" Name="agileTestPlatformAssembly"/>
                                                <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="agileTestPlatformAssemblies"/>
                                              </Sequence.Variables>
                                              <Assign x:TypeArguments="mtbwa:AgileTestPlatformSpec" DisplayName="Assigner spec à agileTestPlatformAssembly" To="[agileTestPlatformAssembly]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.AgileTestPlatformSpec)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                              <mtbwa:FindMatchingFiles DisplayName="Rechercher les assemblys de tests de la plateforme de test Visual Studio" MatchPattern="[String.Format(&quot;{0}\{1}&quot;, outputDirectory, agileTestPlatformAssembly.AssemblyFileSpec)]" Result="[agileTestPlatformAssemblies]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                              <If Condition="[agileTestPlatformAssemblies.Count() &gt; 0]" DisplayName="Si des assemblys de tests de la plateforme de test Visual Studio sont trouvés" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                <If.Then>
                                                  <If Condition="[agileTestPlatformAssembly.HasRunSettingsFile]" DisplayName="Si agileTestPlatformAssembly.HasRunSettingsFile" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                    <If.Then>
                                                      <Sequence DisplayName="Rechercher le fichier de paramètres d'exécution et exécuter Visual Studio Test Runner" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                        <Sequence.Variables>
                                                          <Variable x:TypeArguments="x:String" Name="localRunSettings"/>
                                                        </Sequence.Variables>
                                                        <mtbwa:GenerateRunSettings DisplayName="Générer un fichier de paramètres d'exécution" RunSettingsForTestRun="[agileTestPlatformAssembly.RunSettingsForTestRun]" Result="[localRunSettings]" Workspace="[Workspace]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                                        <mtbwa:RunTests DisplayName="Exécuter Visual Studio Test Runner pour les sources de test" RunName="[agileTestPlatformAssembly.RunName]" Flavor="[ConfigurationToBuild.Configuration]" Platform="[ConfigurationToBuild.Platform]" TestSources="[agileTestPlatformAssemblies]" RunSettings="[localRunSettings]" TestCaseFilter="[agileTestPlatformAssembly.TestCaseFilter]" ExecutionPlatform="[agileTestPlatformAssembly.ExecutionPlatform]"/>
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <mtbwa:RunTests DisplayName="Exécuter Visual Studio Test Runner pour les sources de test" RunName="[agileTestPlatformAssembly.RunName]" Flavor="[ConfigurationToBuild.Configuration]" Platform="[ConfigurationToBuild.Platform]" TestSources="[agileTestPlatformAssemblies]" TestCaseFilter="[agileTestPlatformAssembly.TestCaseFilter]" ExecutionPlatform="[agileTestPlatformAssembly.ExecutionPlatform]"/>
                                                    </If.Else>
                                                  </If>
                                                </If.Then>
                                              </If>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[TypeOf spec Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestMetadataFileSpec]" DisplayName="Si spec Is TestMetadataFileSpec" mtbwt:BuildTrackingParticipant.Importance="None">
                                              <If.Then>
                                                <Sequence DisplayName="Exécuter MSTest pour le fichier de métadonnées">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="mtbwa:TestMetadataFileSpec" Name="testMetadataFile"/>
                                                    <Variable x:TypeArguments="x:String" Name="localTestMetadata"/>
                                                  </Sequence.Variables>
                                                  <Assign x:TypeArguments="mtbwa:TestMetadataFileSpec" DisplayName="Assigner spec à testMetadataFile" To="[testMetadataFile]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestMetadataFileSpec)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                                  <mtbwa:ConvertWorkspaceItem DisplayName="Convertir le chemin d'accès au serveur en chemin d'accès local" Input="[testMetadataFile.MetadataFileName]" Result="[localTestMetadata]" Workspace="[Workspace]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                                  <mtbwa:MSTest RunTitle="[testMetadataFile.RunName]" Category="[testMetadataFile.CategoryFilter]" DisplayName="Exécuter MSTest pour le fichier de métadonnées" Flavor="[ConfigurationToBuild.Configuration]" MaxPriority="[testMetadataFile.MaximumPriority]" MinPriority="[testMetadataFile.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[ConfigurationToBuild.Platform]" SearchPathRoot="[outputDirectory]" TestLists="[testMetadataFile.TestLists]" TestMetadata="[localTestMetadata]" TestSettings="[String.Empty]" CommandLineArguments="[testMetadataFile.MSTestCommandLineArgs]"/>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="Exécuter MSTest pour les assemblys de tests" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="mtbwa:TestAssemblySpec" Name="testAssembly"/>
                                                    <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="testAssemblies"/>
                                                    <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="testFlavor"/>
                                                    <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="testPlatform"/>
                                                  </Sequence.Variables>
                                                  <Assign x:TypeArguments="mtbwa:TestAssemblySpec" DisplayName="Assigner spec à testAssembly" To="[testAssembly]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestAssemblySpec)]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                                  <mtbwa:FindMatchingFiles DisplayName="Rechercher les assemblys de tests" MatchPattern="[String.Format(&quot;{0}\{1}&quot;, outputDirectory, testAssembly.AssemblyFileSpec)]" Result="[testAssemblies]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                                  <If Condition="[testAssemblies.Count() &gt; 0]" DisplayName="Si des assemblys de test sont trouvés" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                    <If.Then>
                                                      <If Condition="[testAssembly.HasTestSettingsFile]" DisplayName="Si testAssembly.HasTestSettingsFile" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                        <If.Then>
                                                          <Sequence DisplayName="Rechercher le fichier de paramètres de tests et exécuter MSTest" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="x:String" Name="localTestSettings"/>
                                                            </Sequence.Variables>
                                                            <mtbwa:ConvertWorkspaceItem DisplayName="Convertir le chemin d'accès au serveur en chemin d'accès local" Input="[testAssembly.TestSettingsFileName]" Result="[localTestSettings]" Workspace="[Workspace]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                                            <mtbwa:MSTest RunTitle="[testAssembly.RunName]" Category="[testAssembly.CategoryFilter]" DisplayName="Exécuter MSTest pour les assemblys de tests" Flavor="[ConfigurationToBuild.Configuration]" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[ConfigurationToBuild.Platform]" SearchPathRoot="[outputDirectory]" TestContainers="[testAssemblies]" TestSettings="[localTestSettings]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]"/>
                                                          </Sequence>
                                                        </If.Then>
                                                        <If.Else>
                                                          <mtbwa:MSTest RunTitle="[testAssembly.RunName]" Category="[testAssembly.CategoryFilter]" DisplayName="Exécuter MSTest pour les assemblys de tests" Flavor="[ConfigurationToBuild.Configuration]" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[ConfigurationToBuild.Platform]" SearchPathRoot="[outputDirectory]" TestContainers="[testAssemblies]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]"/>
                                                        </If.Else>
                                                      </If>
                                                    </If.Then>
                                                  </If>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </TryCatch.Try>
                                      <TryCatch.Catches>
                                        <Catch x:TypeArguments="s:Exception">
                                          <ActivityAction x:TypeArguments="s:Exception">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="testException"/>
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Gérer l'exception de série de tests">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="scg:ICollection(mtbc:IQueuedBuild)" Name="failedRequests"/>
                                              </Sequence.Variables>
                                              <If Condition="[Not (TypeOf testException Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestFailureException)]" DisplayName="Si testException n'a PAS la valeur TestFailureException" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                <If.Then>
                                                  <mtbwa:WriteBuildError DisplayName="Écrire le message d'échec de test" Message="[testException.Message]"/>
                                                </If.Then>
                                              </If>
                                              <mtbwa:SetBuildProperties DisplayName="Affecter la valeur Échec à TestStatus" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                              <If Condition="[spec.FailBuildOnFailure]" DisplayName="Si spec.FailBuildOnFailure" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                <If.Then>
                                                  <Assign x:TypeArguments="s:Boolean" DisplayName="Affecter la valeur True à treatTestFailureAsBuildFailure" To="[treatTestFailureAsBuildFailure]" Value="[True]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                                </If.Then>
                                              </If>
                                              <mtbwa:GetApprovedRequests DisplayName="Faire approuver les demandes pour l'archivage" Result="[failedRequests]" mtbwt:BuildTrackingParticipant.Importance="None"/>
                                              <mtbwa:RetryRequests Behavior="[Microsoft.TeamFoundation.Build.Workflow.Activities.RetryBehavior.DoNotBatch]" DisplayName="Marquer les demandes pour une nouvelle tentative" Requests="[failedRequests]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                                            </Sequence>
                                          </ActivityAction>
                                        </Catch>
                                      </TryCatch.Catches>
                                    </TryCatch>
                                  </ActivityAction>
                                </ForEach>
                              </If.Then>
                            </If>
                          </Sequence>
                        </If.Then>
                      </If>
                      <If Condition="[deployOutput]" DisplayName="Sortie de déploiement" mtbwt:BuildTrackingParticipant.Importance="Low">
                        <If.Then>
                          <If Condition="[treatTestFailureAsBuildFailure And (BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed)]" DisplayName="Déployer si le test réussit" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <If.Then>
                              <mtbwa:WriteBuildMessage DisplayName="Écrire un message" Message="Déploiement ignoré, car le test a échoué." Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal]"/>
                            </If.Then>
                            <If.Else>
                              <If Condition="[Not azureWebSiteProfile Is Nothing]" DisplayName="Sortie de publication">
                                <If.Then>
                                  <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                    <mtdwa:MSDeploy DisplayName="MSDeploy" BuildPath="[outputDirectory]" PublishEndpoint="[azureWebSiteProfile.PublishUrl]" TargetSite="[azureWebSiteProfile.MSDeploySite]" UserName="[azureWebSiteProfile.UserName]" Password="[azureWebSiteProfile.UserPWD]" AllowUntrustedCertificates="[AllowUntrustedCertificates]"/>
                                    <mtbwa:WriteCustomSummaryInformation DisplayName="Write Custom Deployment Summary" Message="[String.Format(« Votre site Web a été déployé sur : [{0}]({0}) »,azureWebSiteProfile.DestinationAppUrl.ToString())]" SectionDisplayName="Résumé du déploiement" SectionKey="customSummarySectionKey" SectionPriority="160"/>
									<mtdwa:SetCurrentAzureWebsiteBuildNumber DisplayName="Définissez le numéro de build actuel dans le portail de site Web." ConnectedService="[deploymentEnvironment.ConnectedService]" AllowUntrustedCertificates="[AllowUntrustedCertificates]" WebsiteEnvironment="[deploymentEnvironment]" mtbwt:BuildTrackingParticipant.Importance="Normal"/>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <If Condition="[deploymentEnvironment.EnvironmentMetadata.Kind = Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.AzureCloudApp]" DisplayName="L'environnement de déploiement est un service cloud Azure" mtbwt:BuildTrackingParticipant.Importance="Low">
                                    <If.Then>
                                      <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                                        <mtdwa:DeployAzureCloudApp DisplayName="Déployer l'application vers Azure" ConnectedService="[deploymentEnvironment.ConnectedService]" DeploymentProfile="[azureCloudAppProfile]" AllowUntrustedCertificates="[AllowUntrustedCertificates]" BuildPath="[outputDirectory]"/>
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                </If.Else>
                              </If>
                            </If.Else>
                          </If>
                        </If.Then>
                      </If>
                    </Sequence>
                    <If Condition="[BuildDetail.CompilationStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown]" DisplayName="Si CompilationStatus = Unknown" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <mtbwa:SetBuildProperties CompilationStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" DisplayName="Définir CompilationStatus sur Opération réussie" PropertiesToSet="CompilationStatus" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                      </If.Then>
                    </If>
                    <If Condition="[BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown]" DisplayName="Si TestStatus = Unknown" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <mtbwa:SetBuildProperties DisplayName="Définir TestStatus sur Opération réussie" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                      </If.Then>
                    </If>
                    <If Condition="[treatTestFailureAsBuildFailure And (BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed)]" DisplayName="Si TreatTestFailureAsBuildFailure et(TestStatus = Failed)" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <mtbwa:SetBuildProperties DisplayName="Affecter la valeur Échec à Status" PropertiesToSet="Status" Status="[Microsoft.TeamFoundation.Build.Client.BuildStatus.Failed]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                      </If.Then>
                    </If>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception">
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="compilationExceptionArgument"/>
                      </ActivityAction.Argument>
                      <Assign x:TypeArguments="s:Exception" DisplayName="Enregistrer l'exception de compilation" To="[compilationException]" Value="[compilationExceptionArgument]" mtbwt:BuildTrackingParticipant.Importance="None"/>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <If Condition="[AssociateChangesetsAndWorkItems]" DisplayName="Si AssociateChangesetsAndWorkItems" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <If Condition="[CreateLabel]" DisplayName="Si CreateLabel et AssociateChangesetsAndWorkItems" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <If.Then>
                      <mtbwa:InvokeForReason DisplayName="Associer des ensembles de modifications et des éléments de travail pour les builds non-Shelveset" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                        <mtbwa:AssociateChangesetsAndWorkItems DisplayName="Associer des ensembles de modifications et des éléments de travail" Result="[associatedChangesets]"/>
                      </mtbwa:InvokeForReason>
                    </If.Then>
                    <If.Else>
                      <mtbwa:WriteBuildWarning DisplayName="Écrire l'avertissement d'association des ensembles de modifications et des éléments de travail" Message="Impossible d'associer des ensembles de modifications et des éléments de travail, car la valeur de l'option Sources d'étiquettes est False."/>
                    </If.Else>
                  </If>
                </If.Then>
              </If>
            </Parallel>
            <If Condition="[Not compilationException Is Nothing]" DisplayName="Si une exception de compilation a été levée" mtbwt:BuildTrackingParticipant.Importance="Low">
              <If.Then>
                <Throw DisplayName="Lever à nouveau l'exception de compilation" Exception="[compilationException]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
              </If.Then>
            </If>
            <Parallel DisplayName="Obtenir les tests impactés, les sources d'index et les symboles de publication">
              <If Condition="[PerformTestImpactAnalysis]" DisplayName="Si PerformTestImpactAnalysis" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <Sequence DisplayName="Obtenir les tests impactés" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="assemblies"/>
                    </Sequence.Variables>
                    <mtbwa:FindMatchingFiles DisplayName="Rechercher les sorties de génération" MatchPattern="[String.Format(&quot;{0}\**\*.dll;{0}\**\*.exe&quot;, BinariesDirectory)]" Result="[assemblies]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                    <mttbb:GetImpactedTests Assemblies="[assemblies]" AssociatedChangesets="[associatedChangesets]" BinariesRoot="[BinariesDirectory]" Build="[BuildDetail]" CodeChanges="{x:Null}" DisplayName="Obtenir les tests impactés" ImpactedTests="{x:Null}" Workspace="[Workspace]"/>
                  </Sequence>
                </If.Then>
              </If>
              <If Condition="[SourceAndSymbolServerSettings.IndexSources Or SourceAndSymbolServerSettings.HasSymbolStorePath]" DisplayName="Si SourceAndSymbolServerSettings.IndexSources Or SourceAndSymbolServerSettings.HasSymbolStorePath" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <mtbwa:InvokeForReason DisplayName="Sources d'index et symboles de publication pour les builds déclenchées" Reason="Triggered">
                    <mtbwa:InvokeForReason.Variables>
                      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="symbolFiles"/>
                    </mtbwa:InvokeForReason.Variables>
                    <mtbwa:FindMatchingFiles DisplayName="Rechercher les fichiers de symboles" MatchPattern="[String.Format(&quot;{0}\**\*.pdb&quot;, BinariesDirectory)]" Result="[symbolFiles]" mtbwt:BuildTrackingParticipant.Importance="Low"/>
                    <If Condition="[SourceAndSymbolServerSettings.IndexSources]" DisplayName="Si SourceAndSymbolServerSettings.IndexSources" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <TryCatch DisplayName="Essayer d'indexer les sources" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <TryCatch.Try>
                            <mtbwa:IndexSources DisplayName="Indexer les sources" FileList="[symbolFiles]"/>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception"/>
                                </ActivityAction.Argument>
                                <mtbwa:WriteBuildError DisplayName="Écrire un message d'erreur d'indexation des sources" Message="[exception.Message]"/>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </If.Then>
                    </If>
                    <If Condition="[SourceAndSymbolServerSettings.HasSymbolStorePath]" DisplayName="Si SourceAndSymbolServerSettings.HasSymbolStorePath" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <TryCatch DisplayName="Essayer de publier les symboles" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <TryCatch.Try>
                            <mtbwa:SharedResourceScope DisplayName="Synchroniser l'accès au magasin des symboles" MaxExecutionTime="[TimeSpan.Zero]" MaxWaitTime="[New TimeSpan(1, 0, 0)]" ResourceName="[SourceAndSymbolServerSettings.SymbolStorePath]" mtbwt:BuildTrackingParticipant.Importance="Low">
                              <mtbwa:PublishSymbols DisplayName="Publier les symboles" FileList="[symbolFiles]" ProductName="[BuildDetail.BuildDefinition.Name]" StorePath="[SourceAndSymbolServerSettings.SymbolStorePath]" Version="[BuildDetail.BuildNumber]"/>
                            </mtbwa:SharedResourceScope>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception"/>
                                </ActivityAction.Argument>
                                <mtbwa:WriteBuildError DisplayName="Écrire un message d'erreur de publication des symboles" Message="[exception.Message]"/>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </If.Then>
                    </If>
                  </mtbwa:InvokeForReason>
                </If.Then>
              </If>
            </Parallel>
          </Sequence>
        </TryCatch.Try>
      </TryCatch>
    </mtbwa:AgentScope>
    <mtbwa:InvokeForReason DisplayName="Archiver les modifications contrôlées pour les builds CheckInShelveset" Reason="CheckInShelveset">
      <mtbwa:CheckInGatedChanges DisplayName="Archiver les modifications contrôlées"/>
    </mtbwa:InvokeForReason>
  </Sequence>
</Activity>
